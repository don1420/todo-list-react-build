{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","constants/index.js","components/search-panel/index.js","components/search-panel/search-panel.js","actions/index.js","components/filter-condition/index.js","components/filter-condition/filter-condition.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/todo-form/todo-form.js","components/app/index.js","components/app/app.js","reducers/index.js","index.js"],"names":["AppHeader","connect","state","todos","length","className","filter","todo","isCompleted","ADD_TODO_ITEM","REMOVE_TODO_ITEM","MARK_AS_DONE","MARK_AS_IMPORTANT","SEARCH_TERM","FILTER_CONDITION","FILTER_CONDITION_ALL","FILTER_CONDITION_ACTIVE","FILTER_CONDITION_DONE","FILTER_CONDITION_IMPORTANT","SearchPanel","dispatch","searchTerm","term","type","constants","payload","placeholder","onChange","e","target","value","FilterCondition","filterCondition","setFilterCondition","setFilterConditionHandler","onClick","removeTodoItem","todoItemId","markAsImportant","id","label","style","textDecoration","color","fontWeight","itemId","stopPropagation","removeTodoItemHandler","markAsImportantHandler","TodoList","markAsDone","visibleTodos","item","isVisible","isImportant","getVisibleTodos","map","addTodoItem","newTodoItem","onSubmit","preventDefault","uuid","add_todo","name","App","initialState","reducer","action","filteredTodos","findIndex","newTodos","indexOf","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a8b97b6.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\n\nexport default AppHeader;","import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\n\nconst AppHeader = ({ todos }) => {\n    return (\n        <>\n            <h1>Todo list</h1>\n            <div>\n                {\n                    todos.length > 0 &&\n                    <span className=\"text-primary fw-bold\">\n                        LEFT TO DO: { todos.filter(todo => todo.isCompleted === false).length },&nbsp;\n                    </span>\n                }\n                {\n                    todos.length > 0 &&\n                    <span className=\"text-success fw-bold\">\n                        DONE: { todos.filter(todo => todo.isCompleted === true).length }\n                    </span>\n                }\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        todos: state.todos\n    }\n};\n\n\nexport default connect(mapStateToProps)(AppHeader);","export const ADD_TODO_ITEM = 'ADD_TODO_ITEM';\nexport const REMOVE_TODO_ITEM = 'REMOVE_TODO_ITEM';\nexport const MARK_AS_DONE = 'MARK_AS_DONE';\nexport const MARK_AS_IMPORTANT = 'MARK_AS_IMPORTANT';\nexport const SEARCH_TERM = 'SEARCH_TERM';\nexport const FILTER_CONDITION = 'FILTER_CONDITION';\nexport const FILTER_CONDITION_ALL = 'FILTER_CONDITION_ALL';\nexport const FILTER_CONDITION_ACTIVE = 'FILTER_CONDITION_ACTIVE';\nexport const FILTER_CONDITION_DONE = 'FILTER_CONDITION_DONE';\nexport const FILTER_CONDITION_IMPORTANT = 'FILTER_CONDITION_IMPORTANT';\n","import SearchPanel from \"./search-panel\";\n\nexport default SearchPanel;","import React from \"react\";\nimport { connect } from \"react-redux\";\n// import './search-panel.css';\nimport './search-panel.less';\nimport { searchTerm } from \"../../actions\";\n\nconst SearchPanel = ({ searchTerm }) => {\n    const searchTermHandler = (e) => {\n        searchTerm(e.target.value);\n    }\n    \n    return <input type=\"text\"\n                  placeholder=\"Search\"\n                  className=\"search-field\"\n                  onChange={ searchTermHandler }/>\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        searchTerm: (term) => dispatch(searchTerm(term))\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(SearchPanel);","import * as constants from \"../constants\";\n\nconst addTodoItem = (newTodoItem) => {\n    return {\n        type: constants.ADD_TODO_ITEM,\n        payload: newTodoItem\n    }\n};\n\nconst removeTodoItem = (todoItemId) => {\n    return {\n        type: constants.REMOVE_TODO_ITEM,\n        payload: todoItemId\n    }\n};\n\nconst markAsDone = (todoItemId) => {\n    return {\n        type: constants.MARK_AS_DONE,\n        payload: todoItemId\n    }\n};\n\nconst markAsImportant = (todoItemId) => {\n    return {\n        type: constants.MARK_AS_IMPORTANT,\n        payload: todoItemId\n    }\n};\n\nconst searchTerm = (term) => {\n    return {\n        type: constants.SEARCH_TERM,\n        payload: term\n    }\n};\n\nconst setFilterCondition = (filterCondition) => {\n    return {\n        type: constants.FILTER_CONDITION,\n        payload: filterCondition\n    }\n};\n\nexport {\n    addTodoItem,\n    removeTodoItem,\n    markAsDone,\n    markAsImportant,\n    searchTerm,\n    setFilterCondition\n};","import FilterCondition from \"./filter-condition\";\n\nexport default FilterCondition;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setFilterCondition } from \"../../actions\";\nimport { FILTER_CONDITION_ACTIVE, FILTER_CONDITION_ALL, FILTER_CONDITION_DONE, FILTER_CONDITION_IMPORTANT } from \"../../constants\";\n\nconst FilterCondition = ({ filterCondition, setFilterCondition }) => {\n    function setFilterConditionHandler(filterCondition) {\n        setFilterCondition(filterCondition);\n    }\n\n    return (\n        <div className=\"btn-group\">\n            <button type=\"button\"\n                    className={`btn  \n                    ${ filterCondition === FILTER_CONDITION_ALL ? 'btn-primary' : 'btn-outline-secondary'}`}\n                    onClick={() => setFilterConditionHandler(FILTER_CONDITION_ALL)}>All</button>\n            <button type=\"button\"\n                    className={`btn  \n                    ${ filterCondition === FILTER_CONDITION_ACTIVE ? 'btn-primary' : 'btn-outline-secondary'}`}\n                    onClick={() => setFilterConditionHandler(FILTER_CONDITION_ACTIVE)}>Active</button>\n            <button type=\"button\"\n                    className={`btn \n                    ${ filterCondition === FILTER_CONDITION_DONE ? 'btn-primary' : 'btn-outline-secondary'}`}\n                    onClick={() => setFilterConditionHandler(FILTER_CONDITION_DONE)}>Done</button>\n            <button type=\"button\"\n                    className={`btn  \n                    ${ filterCondition === FILTER_CONDITION_IMPORTANT ? 'btn-primary' : 'btn-outline-secondary'}`}\n                    onClick={() => setFilterConditionHandler(FILTER_CONDITION_IMPORTANT)}>Important</button>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        filterCondition: state.filterCondition\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setFilterCondition: (filterCondition) => dispatch(setFilterCondition(filterCondition))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterCondition);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { removeTodoItem, markAsImportant } from \"../../actions\";\n// import './todo-list-item.css';\nimport './todo-list-item.less';\n\nconst TodoListItem = ({ id, label, isCompleted, removeTodoItem, markAsImportant }) => {\n    const style = isCompleted ?\n        {\n            textDecoration: 'line-through',\n            color: '#198754',\n            fontWeight: '700'\n        } :\n        {\n            textDecoration: 'none',\n            color: '#212529',\n            fontWeight: '400'\n        }\n\n    function removeTodoItemHandler (e, itemId) {\n        e.stopPropagation();\n        removeTodoItem(itemId);\n    }\n\n    function markAsImportantHandler (e, itemId) {\n        e.stopPropagation();\n        markAsImportant(itemId);\n    }\n\n    return (\n        <span className=\"todo-list-item\">\n            <span\n                className=\"todo-list-item-label\"\n                style={ style }>\n                { label }\n            </span>\n\n            <button type=\"button\" className=\"btn btn-outline-danger\"\n                    onClick={ (e) => removeTodoItemHandler(e, id) }>\n                <i className=\"fa fa-trash\"></i>\n            </button>\n            <button type=\"button\" className=\"btn btn-outline-success\"\n                    onClick={ (e) => markAsImportantHandler(e, id) }>\n                <i className=\"fa fa-exclamation\"></i>\n            </button>\n        </span>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        removeTodoItem: (todoItemId) => dispatch(removeTodoItem(todoItemId)),\n        markAsImportant: (todoItemId) => dispatch(markAsImportant(todoItemId))\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(TodoListItem);","import TodoList from \"./todo-list\";\n\nexport default TodoList;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport TodoListItem from \"../todo-list-item/todo-list-item\";\nimport { markAsDone } from \"../../actions\";\nimport {\n    FILTER_CONDITION_ACTIVE,\n    FILTER_CONDITION_ALL,\n    FILTER_CONDITION_DONE,\n    FILTER_CONDITION_IMPORTANT\n} from \"../../constants\";\n// import './todo-list.css';\nimport './todo-list.less';\n\nconst TodoList = ({ todos, filterCondition, markAsDone }) => {\n    const visibleTodos = getVisibleTodos(todos, filterCondition);\n\n    function getVisibleTodos (todos, filterCondition) {\n        if (filterCondition === FILTER_CONDITION_ALL) {\n            return todos.filter(item => item.isVisible);\n        }\n\n        if (filterCondition === FILTER_CONDITION_DONE) {\n            return todos.filter(item => item.isVisible && item.isCompleted);\n        }\n\n        if (filterCondition === FILTER_CONDITION_ACTIVE) {\n            return todos.filter(item => item.isVisible && !item.isCompleted);\n        }\n\n        if (filterCondition === FILTER_CONDITION_IMPORTANT) {\n            return todos.filter(item => item.isVisible && item.isImportant);\n        }\n    };\n\n    function markAsDoneHandler (itemId) {\n        markAsDone(itemId);\n    }\n\n    return (\n        <ul className=\"list-group todo-list\">\n            {\n                visibleTodos.map((item) => {\n                    return (\n                        <li key={ item.id }\n                            className={`list-group-item bg-opacity-25 ${ item.isImportant ? 'bg-danger' : 'bg-white'}`}\n                            onClick={ () => markAsDoneHandler(item.id) }>\n                            <TodoListItem { ...item } />\n                        </li>\n                    );\n                })\n            }\n        </ul>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        markAsDone: (todoItemId) => dispatch(markAsDone(todoItemId))\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(TodoList);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport uuid from 'react-uuid';\nimport { addTodoItem } from \"../../actions\";\n// import './todo-form.css';\nimport './todo-form.less';\n\nconst TodoForm = ({ addTodoItem }) => {\n    const addTodoItemHandler = (e) => {\n        e.preventDefault();\n\n        addTodoItem({\n            id: uuid(),\n            label: e.target.add_todo.value,\n            isImportant: false,\n            isCompleted: false,\n            isVisible: true\n        });\n\n        e.target.add_todo.value = '';\n    }\n\n    return (\n        <form onSubmit={ addTodoItemHandler } className=\"todo-form d-flex\">\n            <input name=\"add_todo\" type=\"text\" placeholder=\"Add a new TODO\"/>\n            <button type=\"submit\" className=\"btn btn-success\">Add TODO</button>\n        </form>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addTodoItem: (newTodoItem) => dispatch(addTodoItem(newTodoItem))\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(TodoForm);","import App from \"./app\";\n\nexport default App;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-panel\";\nimport FilterCondition from \"../filter-condition\";\nimport TodoList from \"../todo-list\";\nimport TodoForm from \"../todo-form/todo-form\";\n// import './app.css';\nimport './app.less';\n\nconst App = ({ todos, filterCondition }) => {\n    return (\n        <div className=\"container\">\n            <div className=\"todo-list-container\">\n                <AppHeader />\n                <div className=\"search-panel d-flex\">\n                    <SearchPanel />\n                    <FilterCondition />\n                </div>\n                <TodoList todos={ todos } filterCondition={filterCondition}/>\n                <TodoForm />\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        todos: state.todos,\n        filterCondition: state.filterCondition\n    }\n};\n\nexport default connect(mapStateToProps)(App);","import * as constants from \"../constants\";\n\nconst initialState = {\n    todos: [],\n    filterCondition: constants.FILTER_CONDITION_ALL\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case constants.ADD_TODO_ITEM:\n            return {\n                ...state,\n                todos: [...state.todos, action.payload]\n            };\n\n        case constants.REMOVE_TODO_ITEM: {\n            const filteredTodos = state.todos.filter(todo => todo.id !== action.payload)\n\n            return {\n                ...state,\n                todos: filteredTodos\n            };\n        }\n\n        case constants.MARK_AS_DONE: {\n            const itemId = state.todos.findIndex(todo => todo.id === action.payload);\n            const newTodos = [...state.todos];\n            newTodos[itemId].isCompleted = !newTodos[itemId].isCompleted;\n\n            return {\n                ...state,\n                todos: newTodos\n            }\n        }\n\n        case constants.MARK_AS_IMPORTANT: {\n            const itemId = state.todos.findIndex(todo => todo.id === action.payload);\n            const newTodos = [...state.todos];\n            newTodos[itemId].isImportant = !newTodos[itemId].isImportant;\n\n            return {\n                ...state,\n                todos: newTodos\n            }\n        }\n\n        case constants.SEARCH_TERM: {\n            const newTodos = state.todos.map(todo => {\n                if (todo.label.indexOf(action.payload) === -1) {\n                    todo.isVisible = false;\n                }\n                else {\n                    todo.isVisible = true;\n                }\n\n                return todo;\n            });\n\n            return {\n                ...state,\n                todos: newTodos\n            }\n        }\n        case constants.FILTER_CONDITION: {\n            return {\n                ...state,\n                filterCondition: action.payload\n            }\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/app\";\nimport {createStore} from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}